program		= expression ;
expression	= definition ;

(* Expressions *)
definition	= ('var' | modifier {modifier}) index ['=' function]
			| ('var' | modifier {modifier}) index fn
			| index ':=' function
			| assignment ;
assignment	= index '=' function
			| function ;
function	= fn | disjunction ;
disjunction = conjunction {'||' conjunction} ;
conjunction	= comparison {'&&' comparison} ;
comparison	= bitwise {('==' | '!=' | '<' | '>' | '<=' | '>=') bitwise} ;
bitwise		= addsub {('>>' | '<<') addsub} ;
addsub		= muldiv {('+' | '-') muldiv} ;
muldiv		= unary {('*' | '/') unary} ;
unary		= ('-' | '!' | '...') unary
			| call ;
call		= index index {index} ;
index		= [primary] {'.' (Identifier | '[' expression ']')} ;
primary		= Identifier | Number | String | group | list | block ;
list		= '[' explist ']' ;
group		= '(' explist ')' ;

(* Blocks and statements *)
block		= '{' {statement | ';'} '}';
statement	= 'return' expression
			| 'yield' expression
			| 'if' expression ':' statement ['else' statement]
			| 'while' expression ':' statement
			| 'for' Identifier 'in' expression ':' statement
			| expression ;

(* Smaller components *)
fn			= (Identifier | '(' paramlist ')') '=>' expression ;
explist		= expression {',' expression} ;
paramlist	= param {',' param} ;
param		= expression ;
modifier	= 'const' | 'instance' ;
