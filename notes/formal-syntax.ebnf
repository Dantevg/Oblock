program		= expression ;
expression	= block
			| assignment ;

(* Expressions *)
assignment	= variable {'=' assignment}
			| comparison ;
comparison	= bitwise {('==' | '!=' | '<' | '>' | '<=' | '>=') bitwise} ;
bitwise		= addsub {('>>' | '<<') addsub} ;
addsub		= muldiv {('+' | '-') muldiv} ;
muldiv		= unary {('*' | '/') unary} ;
unary		= ('-' | '!') unary
			| primary ;
primary		= variable | Number | String | '(' expression ')' ;

(* Blocks and statements *)
block		= '{' {statement} '}';
statement	= 'print' expression | expression ;

(* Smaller components *)
variable	= Identifier ;
