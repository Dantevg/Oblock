Generalised semi-OOP language with optional typing

1. Define basic syntax
2. Define basic semantics
3. Implement lexer
4. Implement parser
5. Decide on intermediate representation (bytecode?)
6. Implement interpreter / VM
7. Define and implement API
8. Create standard library
9. ???
10. profit!

Versions:
0.0.1 Basic blocks, basic statements, basic expressions
0.1   Functions, control flow, rest of blocks, statements and expressions
0.2   Prototypes, operators and overloading
0.3   Modifiers and syntax sugar, parameter things
0.4   Standard library
0.5   Pattern matching, destructuring, compound assignment
0.5   Coroutines
...   Optional types?
