Generalised semi-OOP language with optional typing

1. Define basic syntax
2. Define basic semantics
3. Implement lexer
4. Implement parser
5. Decide on intermediate representation (bytecode?)
6. Implement interpreter / VM
7. Define and implement API
8. Create standard library
9. ???
10. profit!

Versions:
0.1 Basics: blocks, statements, expressions, functions, control flow
0.2 Classes and instances, operators and overloading
0.3 Modifiers and syntax sugar, parameter things
0.4 Optional types, standard library
