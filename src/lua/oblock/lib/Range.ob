var Range
Range := {
	"()" (from, to) => Range.clone {
		from, to, step = from, to, 1
	}
	
	by(step) => Range.clone {
		from, to, step = this.from, this.to, step
	}
	
	"..." () => {
		values = []
		for value in this: values.append(value)
		return ...values
	}
	
	iterate() => {
		var i = this.from - this.step
		self = this
		return () => {
			i += self.step
			return if self.contains(i): i else nil
		}
	}
	
	contains(that) =>
		if that.is Number:
			that > (this.from-1).min(this.to-1)
			and that < (this.to+1).max(this.from+1)
		else if that.is Range:
			Number.min(that.from) > Number.min(this.from-1)
			and Number.max(that.to) < Number.max(this.to+1)
	
	toString() => "(" ++ this.from ++ ".." ++ this.to ++ ")"
}

yield Range
